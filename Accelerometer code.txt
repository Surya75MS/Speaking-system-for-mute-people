#include <Wire.h>  // Wire library - used for I2C communication
#include <SD.h>                           //include SD module library
#include <TMRpcm.h>                       //include speaker control library

#define SD_ChipSelectPin 4                //define CS pin
int ADXL345 = 0x53; // The ADXL345 sensor I2C address
float X_out, Y_out, Z_out;  // Outputs
int del = 4000;

TMRpcm tmrpcm;                            //crete an object for speaker library

void setup() {
  Serial.begin(9600); // Initiate serial communication for printing the results on the Serial monitor
  Wire.begin(); // Initiate the Wire library

  // Set ADXL345 in measuring mode
  Wire.beginTransmission(ADXL345); // Start communicating with the device 
  Wire.write(0x2D); // Access talk to POWER_CTL Register - 0x2D

  // Enable measurement
  Wire.write(8); // (8dec -> 0000 1000 binary) Bit D3 High for measuring enable 
  Wire.endTransmission();
  delay(10);

  
  if (!SD.begin(SD_ChipSelectPin)) 
  {                                       //see if the card is present and can be initialized  
    return;                               //don't do anything more if not
  }
  tmrpcm.speakerPin = 11;   
  tmrpcm.setVolume(7);        

  // Off-set Calibration
  //X-axis
  Wire.beginTransmission(ADXL345);
  Wire.write(0x1E);  // X-axis offset register
  Wire.write(1);
  Wire.endTransmission();
  delay(10);
  
  //Y-axis
  Wire.beginTransmission(ADXL345);
  Wire.write(0x1F); // Y-axis offset register
  Wire.write(-2);
  Wire.endTransmission();
  delay(10);
  
  //Z-axis
  Wire.beginTransmission(ADXL345);
  Wire.write(0x20); // Z-axis offset register
  Wire.write(-7);
  Wire.endTransmission();
  delay(10);                                      //offset calibration
}

void loop() {
  // === Read acceleromter data === //
  Wire.beginTransmission(ADXL345);
  Wire.write(0x32); // Start with register 0x32 (ACCEL_XOUT_H)
  Wire.endTransmission(false);
  Wire.requestFrom(ADXL345, 6, true); // Read 6 registers total, each axis value is stored in 2 registers
  X_out = ( Wire.read()| Wire.read() << 8); // X-axis value
  //X_out = X_out/256; //For a range of +-2g, we need to divide the raw values by 256, according to the datasheet

  Y_out = ( Wire.read()| Wire.read() << 8); // Y-axis value
  //Y_out = Y_out/256;

  Z_out = ( Wire.read()| Wire.read() << 8); // Z-axis value
  //Z_out = Z_out/256;

/*  Serial.print("Xa= ");
  Serial.print(X_out);
  Serial.print("   Ya= ");
  Serial.print(Y_out);
  Serial.print("   Za= ");
  Serial.println(Z_out);  */

  if(X_out>150)
  {     
    tmrpcm.play("1.wav");  
    delay(del);
  }

  
  else if(X_out<-150)
  {    
    tmrpcm.play("2.wav");   
    delay(del);
  }

    else if(Y_out>150)
  {    
    tmrpcm.play("3.wav");   
    delay(del);
  }

    else if(Y_out<-150)
  {    
    tmrpcm.play("4.wav");  
    delay(del);
  }
}
